[comment encoding = UTF-8 /]
[module toTINA('http://www.example.org/petriNet')]


[template public petriToTINA(aPetriNet : PetriNet)]
[comment @main/]
[file (aPetriNet.name.concat('2TINA.net'), false, 'UTF-8')]
net [aPetriNet.name/]
[for (pl : Place | aPetriNet.nodes->getPlaces())]
	pl [pl.name/] ([pl.tokensNb/])
[/for]
[for (t : Transition | aPetriNet.nodes->getTransitions())]
	tr [t.name/] [t.getIngoingTransitions()/] -> [t.getOutgoingTransitions()/]
[/for]
[/file]
[/template]

[query public getPlaces(elements : OrderedSet(Node)) : OrderedSet(Place) =
	elements
		->select(e | e.oclIsTypeOf(Place)) 
		->collect(e | e.oclAsType(Place)) 
		->asOrderedSet() 
/] 

[query public getTransitions(elements : OrderedSet(Node)) : OrderedSet(Transition) =
	elements->select(e | e.oclIsTypeOf(Transition)) 
		->collect(e | e.oclAsType(Transition)) 
		->asOrderedSet() 
/]

[template public getIngoingTransitions(t : Transition)]
	[for (arc : Arc | t.ingoing)][arc.getTargetsAndTokens()/][/for]
[/template]

[template public getOutgoingTransitions(t : Transition)]
	[for (arc : Arc | t.outgoing)][arc.getSourcesAndTokens()/][/for]
[/template] 

[template public getTargetsAndTokens(arc : Arc)]
	[arc.source.name/][if (arc.kind = ArcKind::readArc)]?[arc.tokensNb/][elseif (arc.tokensNb > 1)]*[arc.tokensNb/][/if]
[/template]

[template public getSourcesAndTokens(arc : Arc)]
	[arc.target.name/][if (arc.tokensNb > 1)]*[arc.tokensNb/][/if]
[/template]